pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                script {
                    // Example: Build a Maven project and create a JAR file
                    sh 'mvn clean package'
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    // Run your tests
                    sh 'mvn test'
                }
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Code Quality Analysis') {
            steps {
                script {
                    // Run SonarQube analysis
                    withSonarQubeEnv('SonarQube') {
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }

        stage('Deploy to Test Environment') {
            steps {
                script {
                    // Deploy using Docker
                    sh 'docker build -t my-spring-boot-app .'
                    sh 'docker run -d -p 8080:8080 my-spring-boot-app'
                }
            }
        }

        stage('Release to Production') {
            steps {
                script {
                    // Example: Push Docker image to a registry (Docker Hub, ECR, etc.)
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKER_PASS', usernameVariable: 'DOCKER_USER')]) {
                        sh 'docker login -u $DOCKER_USER -p $DOCKER_PASS'
                        sh 'docker tag my-spring-boot-app myrepo/my-spring-boot-app:latest'
                        sh 'docker push myrepo/my-spring-boot-app:latest'
                    }
                }
            }
        }

        stage('Monitoring and Alerting') {
            steps {
                script {
                    // Configure monitoring with Datadog or New Relic
                    // Example for Datadog
                    sh 'datadog-agent status'
                }
            }
        }
    }
}
